class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> ans = new LinkedList<List<Integer>>();
        if (nums == null || nums.length == 0) return ans;
        
        Arrays.sort(nums);
        
        for (int i = 0; i < nums.length - 2; i++) {
            
            if (i == 0 || (i > 0 && nums[i] != nums[i-1])) {
                int currTar = 0 - nums[i];
                
                // 2 pointers
                int p1 = i + 1, p2 = nums.length - 1;
                while (p1 < p2) {
                    if (nums[p1] + nums[p2] < currTar) p1++;
                    else if (nums[p1] + nums[p2] > currTar) p2--;
                    else {
                        ans.add(Arrays.asList(nums[i], nums[p1], nums[p2]));
                        while (p1 < p2 && nums[p1] == nums[p1 + 1]) p1++;
                        while (p1 < p2 && nums[p2] == nums[p2 - 1]) p2--;
                        p1++;
                        p2--;
                        
                    }
                }
            }

        }
        
        return ans;
    }
}
