class Solution {
    public int largestRectangleArea(int[] heights) {
        if (heights == null || heights.length == 0) {
            return 0;
        }
        
        // increasing stack
        Stack<Integer> stack = new Stack<Integer>();
        int max = 0;
        
        // count each height's max area
        // i = heights to pop all stack height
        for (int i = 0; i <= heights.length; i++) {
            int curr = i == heights.length ? 0 : heights[i];
            // <= or <
            while ((!stack.isEmpty()) && curr < heights[stack.peek()]) {
                int h = heights[stack.pop()];
                int w = stack.isEmpty() ? i : i - stack.peek() - 1;
                max = Math.max(max, h * w);
            }
            // every time must push i
            stack.push(i);
        }
        
        // end
        return max;
    }
}
