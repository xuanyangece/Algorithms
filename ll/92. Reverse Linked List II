/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode reverseBetween(ListNode head, int m, int n) {
        if (head == null || m >= n) {
            return head;
        }
        
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        ListNode prev = dummy;
        
        // find m-1
        for (int i = 1; i < m; i++) {
            if (prev == null) return null;
            prev = prev.next;
        }
        
        if (prev == null) return null;
        ListNode premNode = prev, mNode = prev.next;
        
        // reverse m - n
        ListNode nNode = mNode, postnNode = mNode.next;
        for (int i = m; i < n; i++) {
            ListNode temp = postnNode.next;
            postnNode.next = nNode;
            nNode = postnNode;
            postnNode = temp;
        }
        
        // connect m - 1 with n, m with n + 1
        premNode.next = nNode;
        mNode.next = postnNode;
        
        return dummy.next;
    }
}
