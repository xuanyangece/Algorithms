class Solution {
    public List<List<Integer>> subsetsWithDup(int[] nums) {
        List<List<Integer>> answer = new LinkedList();
        if (nums == null || nums.length == 0) return answer;
        Arrays.sort(nums);
        
        backtrack(answer, new ArrayList<Integer>(), 0, nums);
        return answer;
    }
    
    private void backtrack(List answer, List temp, int start, int[] nums) {
        answer.add(new ArrayList(temp));
        for (int i = start; i < nums.length; i++) {
            if (i > start && nums[i] == nums[i-1]) continue;
            temp.add(nums[i]);
            backtrack(answer, temp, i + 1, nums);
            temp.remove(temp.size() - 1);
        }
    }
}
