class Solution {
    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        if (obstacleGrid == null || obstacleGrid.length == 0 || obstacleGrid[0].length == 0) return 0;
        
        int n = obstacleGrid.length, m = obstacleGrid[0].length;
        int sum[][] = new int[n][m];
        
        // Initialize
        sum[0][0] = obstacleGrid[0][0] == 1 ? 0 : 1;
        for (int i = 1; i < n; i++) {
            if (obstacleGrid[i][0] == 1) sum[i][0] = 0;
            else sum[i][0] = sum[i-1][0];
        }
        for (int j = 1; j < m; j++) {
            if (obstacleGrid[0][j] == 1) sum[0][j] = 0;
            else sum[0][j] = sum[0][j-1];
        }
        
        // Function
        for (int i = 1; i < n; i++) {
            for (int j = 1; j < m; j++) {
                if (obstacleGrid[i][j] == 1) sum[i][j] = 0;
                else sum[i][j] = sum[i-1][j] + sum[i][j-1];
            }
        }
        
        return sum[n-1][m-1];
    }
}
